package tech.xwood.ether4j.abi;

import org.testng.Assert;
import org.testng.annotations.Test;

public class AbiBytesDynamicTest {

  @Test
  public void testDecode() {
    Assert.assertEquals(
      AbiBytesDynamic.Type.get().decode(
        "00000000000000000000000000000000000000000000000000000000000000060001020304050000000000000000000000000000000000"
          + "000000000000000000"),
      AbiBytesDynamic.of(new byte[] { 0, 1, 2, 3, 4, 5 }));
    Assert.assertEquals(
      AbiBytesDynamic.Type.get().decode(
        "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000"
          + "000000000000000000"),
      AbiBytesDynamic.of(new byte[] { 0 }));
    Assert.assertEquals(
      AbiBytesDynamic.Type.get().decode(
        "00000000000000000000000000000000000000000000000000000000000000046461766500000000000000000000000000000000000000"
          + "000000000000000000"),
      AbiBytesDynamic.of("dave".getBytes()));
    Assert.assertEquals(
      AbiBytesDynamic.Type.get().decode(
        "00000000000000000000000000000000000000000000000000000000000001bd4c6f72656d20697073756d20646f6c6f72207369742061"
          + "6d65742c20636f6e73656374657475722061646970697363696e6720656c69742c2073656420646f20656975736d6f642074656d70"
          + "6f7220696e6369646964756e74207574206c61626f726520657420646f6c6f7265206d61676e6120616c697175612e20557420656e"
          + "696d206164206d696e696d2076656e69616d2c2071756973206e6f737472756420657865726369746174696f6e20756c6c616d636f"
          + "206c61626f726973206e69736920757420616c697175697020657820656120636f6d6d6f646f20636f6e7365717561742e20447569"
          + "73206175746520697275726520646f6c6f7220696e20726570726568656e646572697420696e20766f6c7570746174652076656c69"
          + "7420657373652063696c6c756d20646f6c6f726520657520667567696174206e756c6c612070617269617475722e20457863657074"
          + "6575722073696e74206f6363616563617420637570696461746174206e6f6e2070726f6964656e742c2073756e7420696e2063756c"
          + "706120717569206f666669636961206465736572756e74206d6f6c6c697420616e696d20696420657374206c61626f72756d2e0000"
          + "00"),
      AbiBytesDynamic.of(("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt "
        + "ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi "
        + "ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum "
        + "dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia "
        + "deserunt mollit anim id est laborum.")
          .getBytes()));
  }

  @Test
  public void testEncode() {
    Assert.assertEquals(
      AbiBytesDynamic.of(new byte[] { 0, 1, 2, 3, 4, 5 }).encode(),
      "0000000000000000000000000000000000000000000000000000000000000006000102030405000000000000000000000000000000000000"
        + "0000000000000000");
    Assert.assertEquals(
      AbiBytesDynamic.of(new byte[] { 0 }).encode(),
      "0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000"
        + "0000000000000000");
    Assert.assertEquals(
      AbiBytesDynamic.of("dave".getBytes()).encode(),
      "0000000000000000000000000000000000000000000000000000000000000004646176650000000000000000000000000000000000000000"
        + "0000000000000000");
    Assert.assertEquals(
      AbiBytesDynamic.of(
        ("Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et "
          + "dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip "
          + "ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore "
          + "eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia "
          + "deserunt mollit anim id est laborum.").getBytes())
        .encode(),
      "00000000000000000000000000000000000000000000000000000000000001bd4c6f72656d20697073756d20646f6c6f722073697420616d"
        + "65742c20636f6e73656374657475722061646970697363696e6720656c69742c2073656420646f20656975736d6f642074656d706f72"
        + "20696e6369646964756e74207574206c61626f726520657420646f6c6f7265206d61676e6120616c697175612e20557420656e696d20"
        + "6164206d696e696d2076656e69616d2c2071756973206e6f737472756420657865726369746174696f6e20756c6c616d636f206c6162"
        + "6f726973206e69736920757420616c697175697020657820656120636f6d6d6f646f20636f6e7365717561742e204475697320617574"
        + "6520697275726520646f6c6f7220696e20726570726568656e646572697420696e20766f6c7570746174652076656c69742065737365"
        + "2063696c6c756d20646f6c6f726520657520667567696174206e756c6c612070617269617475722e204578636570746575722073696e"
        + "74206f6363616563617420637570696461746174206e6f6e2070726f6964656e742c2073756e7420696e2063756c706120717569206f"
        + "666669636961206465736572756e74206d6f6c6c697420616e696d20696420657374206c61626f72756d2e000000");
  }

  @Test
  public void testType() {
    Assert.assertEquals(AbiBytesDynamic.Type.get().name, "bytes");
  }

}
